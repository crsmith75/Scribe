version: '2'
services:
  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   ports:
  #     - "2181:2181"
  # kafka:
  #   image: wurstmeister/kafka
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: localhost
  #     KAFKA_CREATE_TOPICS: "factom:1:1"
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.soc
  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python setup.py develop && 
             Scribes runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      # - db
      - zookeeper 
      - kafka
  faust:
    tty: true
    build: ./twitteraccounts/api/faust
    command: ./run.sh
    depends_on:
      - zookeeper
      - kafka
    environment:
      - WORKER=daemon
      - WORKER_PORT=6066
      - KAFKA_BOOTSTRAP_SERVER=kafka://kafka:9092
      - KAFKA_BOOSTRAP_SERVER_NAME=kafka
      - KAFKA_BOOSTRAP_SERVER_PORT=9092
    ports:
      - "8084:80"
      - "8001:8001"
    volumes:
      - ./scripts:/faust/scripts
  zookeeper:
    image: "confluentinc/cp-zookeeper"
    hostname: zookeeper
    ports:
      - 32181:32181
    environment:
      - ZOOKEEPER_CLIENT_PORT=32181
  kafka:
    image: confluentinc/cp-kafka
    hostname: kafka
    container_name: kafka
    ports:
    - 9092:9092
    - 29092:29092
    depends_on:
    - zookeeper
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:32181
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT_HOST://localhost:29092,PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=1
  
